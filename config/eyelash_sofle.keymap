#define ZMK_POINTING_DEFAULT_MOVE_VAL 1200  // 600
#define ZMK_POINTING_DEFAULT_SCRL_VAL 35    // 10

#include <input/processors.dtsi>
#include <zephyr/dt-bindings/input/input-event-codes.h>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/pointing.h>

/ {
    zip_scroll_scaler: zip_scroll_scaler {
        compatible = "zmk,input-processor-scaler";
        #input-processor-cells = <2>;
        type = <INPUT_EV_REL>;
        codes = <INPUT_REL_WHEEL INPUT_REL_HWHEEL>;
        track-remainders;
    };
};

&mmv_input_listener { input-processors = <&zip_xy_scaler 2 1>; };

&msc_input_listener { input-processors = <&zip_scroll_scaler 2 1>; };

&msc {
    acceleration-exponent = <0>;      // 0
    time-to-max-speed-ms = <0>;       // 300
    delay-ms = <0>;                   // 0
};

&mmv {
    time-to-max-speed-ms = <400>;
    acceleration-exponent = <1>;
};

/ {
    scroll_encoder: scroll_encoder {
        compatible = "zmk,behavior-sensor-rotate";
        #sensor-binding-cells = <0>;
        bindings = <&msc SCRL_DOWN>, <&msc SCRL_UP>;

        tap-ms = <30>;
    };

    combos {
        compatible = "zmk,combos";

        Combo-LCtrl {
            bindings = <&kp LEFT_CONTROL>;
            key-positions = <44 43>;
            layers = <0>;
        };

        Combo-LGui {
            bindings = <&kp LEFT_GUI>;
            key-positions = <43 42>;
            layers = <0>;
        };

        Combo-LAlt {
            bindings = <&kp LEFT_ALT>;
            key-positions = <42 41>;
            layers = <0>;
        };

        Combo-LShift {
            bindings = <&kp LEFT_SHIFT>;
            key-positions = <41 40>;
            layers = <0>;
        };

        Combo-RGui {
            bindings = <&kp RIGHT_GUI>;
            key-positions = <47 48>;
            layers = <0>;
        };

        Combo-RAlt {
            bindings = <&kp RIGHT_ALT>;
            key-positions = <48 49>;
            layers = <0>;
        };

        Combo-RShift {
            bindings = <&kp RIGHT_SHIFT>;
            key-positions = <49 50>;
            layers = <0>;
        };

        Combo-RCtrl {
            bindings = <&kp RIGHT_CONTROL>;
            key-positions = <47 46>;
            layers = <0>;
        };

        Combo-L4 {
            bindings = <&sl 4>;
            key-positions = <57 59>;
            layers = <0>;
        };

        Combo-Esc {
            bindings = <&kp ESCAPE>;
            key-positions = <14 15>;
            layers = <0>;
        };

        Combo-Backspace {
            bindings = <&kp BACKSPACE>;
            key-positions = <23 24>;
            layers = <0>;
        };

        Combo-Enter {
            bindings = <&kp ENTER>;
            key-positions = <36 37>;
            layers = <0>;
        };

        Combo-Minus {
            bindings = <&kp MINUS>;
            key-positions = <33 34>;
            layers = <0>;
        };

        Combo-Equal {
            bindings = <&kp EQUAL>;
            key-positions = <34 35>;
            layers = <0>;
        };

        Combo-SingleQ {
            bindings = <&kp SINGLE_QUOTE>;
            key-positions = <35 36>;
            layers = <0>;
        };

        Combo-Tab {
            bindings = <&kp TAB>;
            key-positions = <16 17>;
            layers = <0>;
        };

        Combo-Backtick {
            bindings = <&kp GRAVE>;
            key-positions = <15 16>;
            layers = <0>;
        };

        Combo-CAPWORD {
            bindings = <&caps_word>;
            key-positions = <17 18>;
            layers = <0>;
        };
    };

    behaviors {
    };

    keymap {
        compatible = "zmk,keymap";

        layer_0 {
            bindings = <
&kp ESC           &kp N1        &kp N2        &kp N3  &kp N4       &kp N5         &mmv MOVE_UP     &kp N6       &kp N7       &kp N8     &kp N9         &kp N0         &kp BACKSPACE
&kp TAB           &kp Q         &kp W         &kp E   &kp R        &kp T          &mmv MOVE_DOWN   &kp Y        &kp U        &kp I      &kp O          &kp P          &kp BSLH
&kp LEFT_CONTROL  &kp A         &kp S         &kp D   &kp F        &kp G          &mmv MOVE_LEFT   &kp H        &kp J        &kp K      &kp L          &kp SEMI       &kp APOS
&kp LSHFT         &kp Z         &kp X         &kp C   &kp V        &kp B          &mmv MOVE_RIGHT  &kp N        &kp M        &kp COMMA  &kp DOT        &kp FSLH       &kp RIGHT_SHIFT
&kp C_MUTE        &kp LEFT_GUI  &kp LEFT_ALT  &mo 3   &lt 1 SPACE  &lt 2 SPACE    &mkp LCLK        &lt 2 SPACE  &lt 1 SPACE  &mo 3      &kp RIGHT_ALT  &kp RIGHT_GUI
            >;

            sensor-bindings = <&inc_dec_kp C_VOLUME_UP C_VOL_DN>;
            display-name = "L0";
        };

        layer_1 {
            bindings = <
&kp GRAVE   &kp F1          &kp F2           &kp F3          &kp F4           &kp F5            &mmv MOVE_UP     &kp F6         &kp F7     &kp F8      &kp F9         &kp F10    &trans
&trans      &kp GRAVE       &mkp LCLK        &mmv MOVE_UP    &mkp RCLK        &msc SCRL_UP      &mmv MOVE_DOWN   &kp HOME       &kp END    &kp UP      &kp BACKSPACE  &trans     &trans
&trans      &kp TILDE       &mmv MOVE_LEFT   &mmv MOVE_DOWN  &mmv MOVE_RIGHT  &msc SCRL_DOWN    &mmv MOVE_LEFT   &kp PAGE_UP    &kp LEFT   &kp DOWN    &kp RIGHT      &kp SPACE  &trans
&trans      &kp SCROLLLOCK  &kp PAUSE_BREAK  &mkp MCLK       &mkp MB4         &mkp MB5          &mmv MOVE_RIGHT  &kp PAGE_DOWN  &kp ENTER  &kp DELETE  &kp F11        &kp F12    &trans
&kp C_MUTE  &trans          &trans           &trans          &trans           &trans            &mkp LCLK        &trans         &trans     &trans      &trans         &trans
            >;

            display-name = "L1";
            sensor-bindings = <&scroll_encoder>;
        };

        layer_2 {
            bindings = <
&trans  &trans   &trans   &trans            &trans             &trans               &mmv MOVE_UP     &trans           &trans         &trans          &trans                &trans                 &trans
&trans  &kp F1   &kp F2   &kp F3            &kp F4             &kp F5               &mmv MOVE_DOWN   &kp EXCLAMATION  &kp AT_SIGN    &kp POUND       &kp DOLLAR            &kp PERCENT            &trans
&trans  &kp F6   &kp F7   &kp F8            &kp F9             &kp F10              &mmv MOVE_LEFT   &kp CARET        &kp AMPERSAND  &kp ASTRK       &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &trans
&trans  &kp F11  &kp F12  &kp LEFT_BRACKET  &kp RIGHT_BRACKET  &kp DOUBLE_QUOTES    &mmv MOVE_RIGHT  &kp MINUS        &kp EQUAL      &kp LEFT_BRACE  &kp RIGHT_BRACE       &kp SINGLE_QUOTE       &trans
&trans  &trans   &trans   &trans            &trans             &trans               &mkp LCLK        &trans           &trans         &trans          &trans                &trans
            >;

            sensor-bindings = <&scroll_encoder>;
            label = "L2";
        };

        layer_3 {
            bindings = <
&trans  &trans        &trans        &trans        &trans          &trans          &trans  &trans             &trans           &trans            &trans              &trans  &trans
&trans  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3    &bt BT_SEL 4    &trans  &kp C_VOLUME_DOWN  &kp C_VOLUME_UP  &kp K_PLAY_PAUSE  &kp K_STOP          &trans  &trans
&trans  &out OUT_USB  &out OUT_BLE  &trans        &trans          &trans          &trans  &kp K_PREVIOUS     &kp K_NEXT       &kp K_MUTE        &kp LC(LA(DELETE))  &trans  &trans
&trans  &sys_reset    &bootloader   &bt BT_CLR    &bt BT_CLR_ALL  &trans          &trans  &trans             &trans           &trans            &trans              &trans  &trans
&trans  &trans        &trans        &trans        &trans          &trans          &trans  &trans             &trans           &trans            &trans              &trans
            >;

            label = "L3";
        };

        layer_4 {
            bindings = <
&trans  &trans           &trans          &trans        &trans                &trans                   &trans  &trans        &trans          &trans           &trans            &trans             &trans
&trans  &kp EXCLAMATION  &kp AT_SIGN     &kp POUND     &kp DOLLAR            &kp PERCENT              &trans  &kp NUMBER_1  &kp NUMBER_2    &kp NUMBER_3     &kp NUMBER_4      &kp NUMBER_5       &trans
&trans  &kp CARET        &kp AMPERSAND   &kp ASTERISK  &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS    &trans  &kp NUMBER_6  &kp NUMBER_7    &kp NUMBER_8     &kp NUMBER_9      &kp NUMBER_0       &trans
&trans  &kp MINUS        &kp UNDERSCORE  &kp EQUAL     &kp PLUS              &kp RS(BACKSLASH)        &trans  &kp PIPE      &kp LEFT_BRACE  &kp RIGHT_BRACE  &kp LEFT_BRACKET  &kp RIGHT_BRACKET  &trans
&trans  &trans           &trans          &trans        &trans                &trans                   &trans  &trans        &trans          &trans           &trans            &trans
            >;

            label = "L4";
        };
    };
};
